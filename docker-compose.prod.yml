version: "3.8"

x-app: &default-app
    restart: always
    build:
        context: .
        target: production
    depends_on:
        - postgres
        - rabbit
        - redis
    volumes:
        - /mnt:/mnt
        - adit_data:/var/www/adit
    env_file:
        - .env
    environment:
        USE_DOCKER: 1
        DJANGO_SETTINGS_MODULE: "adit.settings.production"
        DATABASE_URL: "psql://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres"
        RABBITMQ_URL: "amqp://rabbit"
        REDIS_URL: "redis://redis:6379/0"
        DJANGO_STATIC_ROOT: "/var/www/adit/static/"
        SSL_CERT_FILE: "/var/www/adit/ssl/cert.pem"
        SSL_KEY_FILE: "/var/www/adit/ssl/key.pem"
        FLOWER_HOST: "flower"
        FLOWER_PORT: "5555"

services:
    web:
        <<: *default-app
        ports:
            - "80:80"
            - "443:443"
        command: >
            bash -c "
              ./scripts/wait-for-it.sh postgres:5432 -t 30 &&
              python ./manage.py migrate &&
              python ./manage.py collectstatic --no-input &&
              python ./manage.py create_admin &&
              python ./manage.py generate_cert &&
              daphne -b 0.0.0.0 -p 80 -e ssl:443:privateKey=/var/www/adit/ssl/key.pem:certKey=/var/www/adit/ssl/cert.pem adit.asgi:application
            "

    worker_default:
        <<: *default-app
        command: python manage.py celery_worker -Q default

    worker_batch_transfer:
        <<: *default-app
        command: python manage.py celery_worker -Q batch_transfer

    worker_continuous_transfer:
        <<: *default-app
        command: python manage.py celery_worker -Q continuous_stransfer

    celery_beat:
        <<: *default-app
        command: celery -A adit beat -l INFO -s /var/www/adit/celery/celerybeat-schedule --pidfile /var/www/adit/celery/celerybeat.pid

    receiver:
        <<: *default-app
        ports:
            - "11112:11112"
        command: python manage.py receiver

    flower:
        <<: *default-app
        expose:
            - "5555"
        command: celery flower -A adit --url_prefix=flower

    postgres:
        restart: always
        image: postgres:latest
        expose:
            - "5432"
        env_file:
            - .env
        volumes:
            - postgres_data:/var/lib/postgresql/data

    rabbit:
        image: rabbitmq:latest
        expose:
            - "5672"
        volumes:
            - rabbit_data:/var/lib/rabbitmq

    redis:
        restart: always
        image: redis:latest
        expose:
            - "6379"
        volumes:
            - redis_data:/data

volumes:
    adit_data: # For statics, SSL certs, logs, Celery Beat db
    postgres_data:
    rabbit_data:
    redis_data:
    flower_data:

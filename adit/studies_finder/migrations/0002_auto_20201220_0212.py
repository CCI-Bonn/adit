# Generated by Django 3.1.3 on 2020-12-20 02:12

import adit.core.validators
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('studies_finder', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='studiesfinderquery',
            options={'ordering': ('row_number',)},
        ),
        migrations.RenameField(
            model_name='studiesfinderquery',
            old_name='query_id',
            new_name='row_number',
        ),
        migrations.AlterField(
            model_name='studiesfinderquery',
            name='modalities',
            field=models.JSONField(blank=True, null=True, validators=[adit.core.validators.validate_modalities]),
        ),
        migrations.AlterField(
            model_name='studiesfinderquery',
            name='patient_birth_date',
            field=models.DateField(blank=True, error_messages={'invalid': 'Invalid date format.'}, null=True),
        ),
        migrations.AlterField(
            model_name='studiesfinderquery',
            name='patient_id',
            field=models.CharField(blank=True, default=123, max_length=64, validators=[django.core.validators.RegexValidator(inverse_match=True, message='Contains invalid backslash character', regex='\\\\'), django.core.validators.RegexValidator(inverse_match=True, message='Contains invalid control characters.', regex='[\\f\\n\\r]'), django.core.validators.RegexValidator(inverse_match=True, message='Contains invalid wildcard characters.', regex='[\\*\\?]')]),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='studiesfinderquery',
            name='patient_name',
            field=models.CharField(blank=True, default='foo', max_length=324, validators=[django.core.validators.RegexValidator(inverse_match=True, message='Contains invalid backslash character', regex='\\\\'), django.core.validators.RegexValidator(inverse_match=True, message='Contains invalid control characters.', regex='[\\f\\n\\r]'), django.core.validators.RegexValidator(inverse_match=True, message='Contains invalid wildcard characters.', regex='[\\*\\?]')]),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='studiesfinderquery',
            name='study_date_end',
            field=models.DateField(blank=True, error_messages={'invalid': 'Invalid date format.'}, null=True),
        ),
        migrations.AlterField(
            model_name='studiesfinderquery',
            name='study_date_start',
            field=models.DateField(blank=True, error_messages={'invalid': 'Invalid date format.'}, null=True),
        ),
        migrations.AlterField(
            model_name='studiesfinderresult',
            name='image_count',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='studiesfinderresult',
            name='modalities',
            field=models.JSONField(blank=True, null=True, validators=[adit.core.validators.validate_modalities]),
        ),
        migrations.AlterUniqueTogether(
            name='studiesfinderquery',
            unique_together={('row_number', 'job')},
        ),
    ]
